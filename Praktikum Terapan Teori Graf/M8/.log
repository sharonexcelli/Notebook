2021-04-28 14:51:00,748 [18076] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-28 14:51:00,749 [18076] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-28 14:51:00,750 [18076] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-28 14:51:00,761 [18076] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-28 14:51:00,763 [18076] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-28 14:51:00,765 [18076] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-28 14:51:01,572 [18076] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-28 14:51:01,573 [18076] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-28 14:51:01,574 [18076] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-28 14:51:01,581 [18076] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-28 14:51:01,584 [18076] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-28 14:51:01,584 [18076] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-28 15:21:59,256 [15344] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-28 15:21:59,257 [15344] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-28 15:21:59,258 [15344] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-28 15:21:59,271 [15344] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-28 15:21:59,283 [15344] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-28 15:21:59,284 [15344] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-28 15:22:01,343 [15344] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-28 15:22:01,344 [15344] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-28 15:22:01,344 [15344] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-28 15:22:01,354 [15344] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-28 15:22:01,356 [15344] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-28 15:22:01,357 [15344] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-28 15:22:37,733 [15344] DEBUG    matplotlib:241: [JupyterRequire] (private) matplotlib data path: C:\Users\sharo\anaconda3\lib\site-packages\matplotlib\mpl-data
2021-04-28 15:22:37,734 [15344] DEBUG    matplotlib:241: [JupyterRequire] matplotlib data path: C:\Users\sharo\anaconda3\lib\site-packages\matplotlib\mpl-data
2021-04-28 15:22:37,752 [15344] DEBUG    matplotlib:241: [JupyterRequire] CONFIGDIR=C:\Users\sharo\.matplotlib
2021-04-28 15:22:37,762 [15344] DEBUG    matplotlib:1471: [JupyterRequire] matplotlib version 3.3.2
2021-04-28 15:22:37,762 [15344] DEBUG    matplotlib:1472: [JupyterRequire] interactive is False
2021-04-28 15:22:37,763 [15344] DEBUG    matplotlib:1473: [JupyterRequire] platform is win32
2021-04-28 15:22:37,764 [15344] DEBUG    matplotlib:1474: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'google', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '__future__', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'atexit', 'copy', 'posixpath', 'fnmatch', 'glob', 'token', 'tokenize', 'linecache', 'traceback', 'collections.abc', '_string', 'string', 'logging', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'pprint', 'locale', 'gettext', 'argparse', 'ipython_genutils._version', 'ipython_genutils', 'math', '_bisect', 'bisect', '_sha512', '_random', 'random', 'ipython_genutils.encoding', 'platform', 'ipython_genutils.py3compat', 'ipython_genutils.path', 'traitlets.config.loader', 'textwrap', 'ipython_genutils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'sysconfig', 'urllib', 'urllib.parse', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', '_ctypes', '_struct', 'struct', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'tempfile', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', '_sha3', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'pathlib', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'typing.io', 'typing.re', 'typing', 'binascii', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'getpass', 'IPython.lib.security', 'IPython.lib', '_datetime', 'datetime', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', '_compat_pickle', '_pickle', 'pickle', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'html.entities', 'html', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'select', 'selectors', 'socket', '_ssl', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'array', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', '_queue', 'queue', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'jupyter_client._version', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_21', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.strtypes', 'zmq.utils.jsonapi', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'jupyter_core.paths', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'ipython_genutils.importstring', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', 'numbers', 'logging.handlers', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32api', 'win32security', 'ntsecuritycon', 'faulthandler', 'ipykernel.codeutil', 'ipykernel.pickleutil', 'ipykernel.serialize', 'ipykernel.datapub', 'IPython.core.completerlib', 'storemagic', 'socketserver', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'jupyter_require', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'mmap', 'pandas._typing', 'pandas.compat', 'pandas.compat.numpy', '_cython_0_29_22', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.dtypes.missing', 'pandas.util._decorators', 'pandas.core.util', 'pandas._libs.hashing', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas._libs.ops', 'pandas.core.ops.roperator', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck._pytesttester', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', '_csv', 'csv', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.numeric', 'pandas.core.arrays.floating', 'pandas.core.arrays.integer', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.reshape', 'pandas.core.reshape.concat', 'dataclasses', 'gzip', 'zipfile', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.generic', 'pandas.core.internals.construction', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.engines', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.api', 'pandas.util._tester', 'cmath', 'pandas._libs.testing', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'cv2.Error', 'cv2.cuda', 'cv2.detail', 'cv2.dnn', 'cv2.fisheye', 'cv2.flann', 'cv2.gapi', 'cv2.gapi.core', 'cv2.gapi.core.cpu', 'cv2.gapi.core.fluid', 'cv2.gapi.core.ocl', 'cv2.gapi.ie', 'cv2.gapi.ie.detail', 'cv2.gapi.onnx', 'cv2.gapi.own', 'cv2.gapi.own.detail', 'cv2.gapi.video', 'cv2.gapi.wip', 'cv2.ipp', 'cv2.ml', 'cv2.ocl', 'cv2.ogl', 'cv2.samples', 'cv2.utils', 'cv2.videoio_registry', 'cv2.cv2', 'cv2.data', 'cv2.version', 'cv2', 'skimage._shared', 'skimage._shared.version_requirements', 'skimage._shared.geometry', 'skimage.util.dtype', 'skimage.util.shape', 'skimage.util.noise', 'skimage.util.apply_parallel', 'skimage.util.arraycrop', 'skimage.util.compare', 'skimage.util._regular_grid', 'skimage.util.unique', 'skimage.util._invert', 'skimage.util._montage', 'skimage.util._remap', 'skimage.util._map_array', 'skimage.util', 'skimage.data._binary_blobs', 'skimage.data._registry', 'skimage.data', 'skimage.util.lookfor', 'skimage', 'skimage.io', 'configparser', 'PIL._version', 'PIL', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'concurrent.futures.thread', 'imagecodecs.imagecodecs', 'imagecodecs', 'imagecodecs._shared', 'imagecodecs._imcd', 'tifffile.tifffile', 'tifffile', 'skimage.io.collection', 'skimage.io.manage_plugins', 'skimage.io.sift', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib.six', 'scipy._lib._version', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy._lib._uarray._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray', 'scipy._lib.uarray', 'scipy.fft._basic', 'scipy.fft._realtransforms', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._pocketfft', 'scipy.fft._helper', 'scipy.fft._backend', 'numpy.dual', 'scipy.fft', 'scipy', 'scipy.linalg.linalg_version', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', '_cython_0_29_14', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy._lib._numpy_compat', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg', 'skimage.color.colorconv', 'skimage._shared._warnings', 'skimage._shared.utils', 'skimage.color.rgb_colors', 'skimage.color.colorlabel', 'skimage.color.delta_e', 'skimage.color', 'skimage.io.util', 'skimage.exposure.exposure', 'skimage.color.adapt_rgb', 'skimage.exposure._adapthist', 'skimage.exposure.histogram_matching', 'skimage.exposure', 'skimage.io._io', 'skimage.io._image_stack', 'skimage.io._plugins', 'imageio.core.util', 'imageio.core.findlib', 'imageio.core.fetching', 'imageio.core.request', 'imageio.core.format', 'imageio.core', 'imageio.core.functions', 'imageio.plugins.tifffile', 'imageio.plugins.pillow_info', 'imageio.plugins.pillowmulti', 'imageio.plugins.pillow', 'imageio.plugins.grab', 'imageio.plugins._freeimage', 'imageio.plugins.freeimage', 'imageio.plugins.freeimagemulti', 'imageio.plugins.ffmpeg', 'imageio.plugins.bsdf', 'imageio.plugins.dicom', 'imageio.plugins.npz', 'imageio.plugins.swf', 'imageio.plugins.feisem', 'imageio.plugins.fits', 'imageio.plugins.simpleitk', 'imageio.plugins.gdal', 'imageio.plugins.lytro', 'imageio.plugins.spe', 'imageio.plugins.example', 'imageio.plugins', 'imageio', 'skimage.io._plugins.imageio_plugin', 'skimage.io._plugins.matplotlib_plugin', 'mpl_toolkits.axes_grid1', 'mpl_toolkits.axes_grid1.axes_size', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2021-04-28 15:22:37,995 [15344] DEBUG    matplotlib:241: [JupyterRequire] CACHEDIR=C:\Users\sharo\.matplotlib
2021-04-28 15:22:38,015 [15344] DEBUG    matplotlib.font_manager:1436: [JupyterRequire] Using fontManager instance from C:\Users\sharo\.matplotlib\fontlist-v330.json
2021-04-28 15:22:38,460 [15344] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-28 15:22:38,474 [15344] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2021-04-28 15:27:15,255 [15344] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2021-04-28 15:27:15,256 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,256 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,257 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,258 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2021-04-28 15:27:15,263 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,264 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,265 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,266 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,267 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,267 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,268 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2021-04-28 15:27:15,268 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,269 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,270 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,271 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,274 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2021-04-28 15:27:15,275 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,277 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,283 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2021-04-28 15:27:15,298 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,301 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,301 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,302 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,303 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,304 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,305 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,305 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,308 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,309 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2021-04-28 15:27:15,310 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,312 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,313 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,313 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,314 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,314 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,315 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,316 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2021-04-28 15:27:15,316 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,317 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua Titling MT' (PERTILI.TTF) normal normal 300 normal>) = 10.145
2021-04-28 15:27:15,317 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,318 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GeoSlab703 Md BT' (GeoSlab703 Md BT Medium Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,318 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'qtquickcontrols' (icons.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,318 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Clarendon Blk BT' (Clarendon Blk BT Black.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,319 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2021-04-28 15:27:15,320 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura Md BT' (Futura Md BT Medium.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,320 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,321 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'ZWAdobeF' (ZWAdobeF.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,321 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Square721 Cn BT' (tt0248m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,323 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'BIZ UDGothic' (BIZ-UDGothicB.ttc) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,324 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Parchment' (PARCHM.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,325 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Matura MT Script Capitals' (MATURASC.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,326 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,327 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,329 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT Ext Condensed Bold' (GLSNECB.TTF) normal normal 400 condensed>) = 10.25
2021-04-28 15:27:15,330 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHVIT.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,331 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TypoUpright BT' (TypoUpright BT.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,331 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rockwell' (ROCKBI.TTF) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,333 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geometr212 BkCn BT' (tt0504m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,334 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Script MT Bold' (SCRIPTBL.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,336 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 WGL4 BT' (tt0005c_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,336 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YD2002' (YD2002.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,337 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rockwell Condensed' (ROCCB___.TTF) normal normal 700 condensed>) = 10.535
2021-04-28 15:27:15,337 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Clarendon Lt BT' (tt0282m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,339 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,339 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,359 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Sans' (NotoSans-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,361 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'NewsGoth Lt BT' (tt0132m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,362 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans' (LSANSD.TTF) normal normal 600 normal>) = 10.24
2021-04-28 15:27:15,362 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 No2 BT' (tt1181m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,363 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,364 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Freehand521 BT' (Freehand521 BT.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,365 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,365 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,366 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Goudy Stout' (GOUDYSTO.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,366 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'CentSchbkCyrill BT' (tt6807m_.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,367 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Exotc350 DmBd BT' (Exotc350 DmBd BT Demi-Bold.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,368 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Goudy Old Style' (GOUDOS.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,368 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,369 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT Condensed Extra Bold' (TCCEB.TTF) normal normal 400 condensed>) = 10.25
2021-04-28 15:27:15,369 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Old English Text MT' (OLDENGL.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,370 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,371 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kaufmann BT' (tt0726m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,372 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,373 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,374 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'NewsGoth Lt BT' (NewsGoth Lt BT Light.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,375 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal 500 normal>) = 10.145
2021-04-28 15:27:15,375 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 SeBd BT' (Century751 SeBd BT Semi Bold.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,375 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal 300 normal>) = 11.145
2021-04-28 15:27:15,376 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chiller' (CHILLER.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,377 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humanst521 BT' (Humanst521 BT Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,378 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humanst521 BT' (tt0290m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,381 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cooper Black' (COOPBL.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,382 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,383 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 100 normal>) = 11.335
2021-04-28 15:27:15,383 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,385 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Britannic Bold' (BRITANIC.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,386 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,387 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Goudy Old Style' (GOUDOSB.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,387 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OCR-A BT' (OCR-a___.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,388 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,389 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura Md BT' (tt0143m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,390 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Demi Cond' (FRADMCN.TTF) normal normal 400 condensed>) = 10.25
2021-04-28 15:27:15,391 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,391 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geometr706 BlkCn BT' (tt0663m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,392 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Square721 Cn BT' (tt0249m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,393 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,393 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Bd BT' (Bodoni Bd BT Bold Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,393 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,394 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 WGL4 BT' (Swis721 WGL4 BT Roman.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,394 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,394 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ravie' (RAVIE.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,395 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Haettenschweiler' (HATTEN.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,395 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Schadow BT' (tt1106m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,395 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'CentSchbkCyrill BT' (tt6806m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,396 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Bd BT' (tt0038m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,397 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,398 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,401 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humnst777 Cn BT' (Humnst777 Cn BT.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,402 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kaufmann BT' (Kaufmann BT.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,402 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 SeBd BT' (Century751 SeBd BT Semi Bold Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,403 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,404 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,404 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni MT' (BOD_BI.TTF) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,405 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,406 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Vivaldi' (VIVALDII.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,407 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,410 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bell MT' (BELLI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,411 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal 300 normal>) = 11.145
2021-04-28 15:27:15,411 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,412 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rockwell Condensed' (ROCC____.TTF) normal normal 400 condensed>) = 10.25
2021-04-28 15:27:15,413 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2021-04-28 15:27:15,414 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua Titling MT' (PERTIBD.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,415 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,416 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,416 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal 900 normal>) = 10.525
2021-04-28 15:27:15,418 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 BT' (tt0006m_.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,418 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geometr415 Blk BT' (tt0524m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,421 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (ARLRDBD.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,422 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Broadway' (BROADW.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,423 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Elephant' (ELEPHNTI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,424 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rockwell Extra Bold' (ROCKEB.TTF) normal normal 800 normal>) = 10.43
2021-04-28 15:27:15,425 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Schadow BT' (Schadow BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,425 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Exotc350 Bd BT' (Exotc350 Bd BT Bold.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,426 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2021-04-28 15:27:15,427 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palace Script MT' (PALSCRI.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,427 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,428 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GeoSlab703 Md BT' (tt0311m_.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,429 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEBO.TTF) oblique normal 600 normal>) = 11.24
2021-04-28 15:27:15,430 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humanst521 BT' (tt0291m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,430 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,431 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'NewsGoth BT' (NewsGoth BT Roman.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,431 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2021-04-28 15:27:15,432 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humanst521 Lt BT' (tt0288m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,432 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 200 normal>) = 11.24
2021-04-28 15:27:15,433 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humnst777 BT' (Humnst777 BT Roman.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,433 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DFMincho-W5' (dfmw5.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,434 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OCR-A BT' (OCR-A BT.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,434 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'NewsGoth BT' (tt0047m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,435 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura Md BT' (tt0142m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,435 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,436 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Algerian' (ALGER.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,436 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calisto MT' (CALISTB.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,437 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 WGL4 BT' (tt0006c_.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,437 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2021-04-28 15:27:15,438 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'NewsGoth BT' (tt0050m_.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,438 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Fax' (LFAXDI.TTF) italic normal 600 normal>) = 11.24
2021-04-28 15:27:15,439 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'High Tower Text' (HTOWERT.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,440 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century725 Cn BT' (tt1057m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,440 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (LatoWeb-Semibold.ttf) normal normal 600 normal>) = 10.24
2021-04-28 15:27:15,441 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,442 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,442 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2021-04-28 15:27:15,443 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,443 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal 900 normal>) = 11.525
2021-04-28 15:27:15,444 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Footlight MT Light' (FTLTLT.TTF) normal normal 300 normal>) = 10.145
2021-04-28 15:27:15,444 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (LatoWeb-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,444 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura Bk BT' (tt0140m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,445 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humnst777 Cn BT' (Humnst777 Cn BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,446 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,446 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Blk BT' (Swis721 Blk BT Black.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,447 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT Condensed' (TCCB____.TTF) normal normal 700 condensed>) = 10.535
2021-04-28 15:27:15,447 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Clarendon Blk BT' (tt0351m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,448 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humanst521 Lt BT' (Humanst521 Lt BT Light Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,449 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Onyx' (ONYX.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,449 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humnst777 Blk BT' (tt0861m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,450 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 SeBd BT' (tt1182m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,451 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Engravers MT' (ENGR.TTF) normal normal 500 normal>) = 10.145
2021-04-28 15:27:15,451 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Californian FB' (CALIFI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,452 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Showcard Gothic' (SHOWG.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,453 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century Schoolbook' (SCHLBKBI.TTF) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,453 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 No2 BT' (Century751 No2 BT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,454 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 200 normal>) = 10.24
2021-04-28 15:27:15,454 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Square721 Cn BT' (Square721 Cn BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,455 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Goudy Old Style' (GOUDOSI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,455 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Fax' (LFAXD.TTF) normal normal 600 normal>) = 10.24
2021-04-28 15:27:15,456 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Mincho' (yuminl.ttf) normal normal 300 normal>) = 10.145
2021-04-28 15:27:15,456 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Eras Bold ITC' (ERASBD.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,457 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal 500 normal>) = 11.145
2021-04-28 15:27:15,457 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Demi' (FRADM.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,458 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humnst777 Lt BT' (tt0855m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,458 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,461 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geometr415 Blk BT' (Geometr415 Blk BT Black.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,462 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEO.TTF) oblique normal 400 normal>) = 11.05
2021-04-28 15:27:15,463 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TypoUpright BT' (tt0939m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,464 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,464 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,465 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2021-04-28 15:27:15,465 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Schadow BT' (Schadow BT Roman.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,466 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wide Latin' (LATINWD.TTF) normal normal 400 expanded>) = 10.25
2021-04-28 15:27:15,467 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GeoSlab703 MdCn BT' (GeoSlab703 MdCn BT Medium.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,468 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,468 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPEB.TTF) normal normal 600 normal>) = 10.24
2021-04-28 15:27:15,469 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,470 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura Md BT' (Futura Md BT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,471 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (PERI____.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,472 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calisto MT' (CALISTI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,473 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,473 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans' (LSANSI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,474 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,474 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,475 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2021-04-28 15:27:15,476 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2021-04-28 15:27:15,476 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,476 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Embassy BT' (tt0588m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,477 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Mincho' (yumin.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,478 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura Md BT' (Futura Md BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,481 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Bright' (LBRITEI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,483 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'NewsGoth BT' (NewsGoth BT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,484 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Harlow Solid Italic' (HARLOWSI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,484 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Niagara Engraved' (NIAGENG.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,485 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Clarendon Lt BT' (Clarendon Lt BT Light.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,486 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bell MT' (BELLB.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,486 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 BT' (Swis721 BT Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,487 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2021-04-28 15:27:15,488 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 7.8986363636363635
2021-04-28 15:27:15,489 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (TCB_____.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,490 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Bk BT' (tt0036m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,491 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 100 normal>) = 10.335
2021-04-28 15:27:15,492 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,493 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humnst777 Cn BT' (tt1159m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,493 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geometr212 BkCn BT' (Geometr212 BkCn BT Heavy.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,494 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GeoSlab703 Md BT' (GeoSlab703 Md BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,495 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'NewsGoth BT' (NewsGoth BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,496 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Maiandra GD' (MAIAN.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,497 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 BT' (tt0003m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,497 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 SeBd BT' (tt1183m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,498 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2021-04-28 15:27:15,499 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Copperplate Gothic Bold' (COPRGTB.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,500 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'CentSchbkCyrill BT' (CentSchbkCyrill BT Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,501 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Square721 BT' (Square721 BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,501 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'CentSchbkCyrill BT' (CentSchbkCyrill BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,503 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni MT' (BOD_I.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,504 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (GILB____.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,504 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,505 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Snap ITC' (SNAP____.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,505 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'EngraversGothic BT' (tt0586m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,506 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'EngraversGothic BT' (EngraversGothic BT.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,507 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Cn BT' (Swis721 Cn BT Roman.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,508 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Elephant' (ELEPHNT.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,508 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (LatoWeb-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,509 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Calligraphy' (LCALLIG.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,509 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'News701 BT' (tt0320m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,510 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni MT' (BOD_B.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,510 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,511 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,512 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Hv BT' (tt0102m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,512 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'UD Digi Kyokasho N-B' (UDDigiKyokashoN-B.ttc) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,513 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT Condensed' (TCCM____.TTF) normal normal 400 condensed>) = 10.25
2021-04-28 15:27:15,513 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Bd BT' (Bodoni Bd BT Bold.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,514 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 6.8986363636363635
2021-04-28 15:27:15,514 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Blk BT' (tt0007m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,515 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans' (LSANSDI.TTF) italic normal 600 normal>) = 11.24
2021-04-28 15:27:15,515 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geometr212 BkCn BT' (tt0503m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,516 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Curlz MT' (CURLZ___.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,516 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 WGL4 BT' (Swis721 WGL4 BT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,517 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni MT' (BOD_CR.TTF) normal normal 400 condensed>) = 10.25
2021-04-28 15:27:15,517 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,518 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 BT' (Swis721 BT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,518 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,519 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humanst521 Lt BT' (tt0289m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,519 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,520 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (GIL_____.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,521 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,522 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Lt BT' (tt0001m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,523 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,524 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,524 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,525 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,526 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Imprint MT Shadow' (IMPRISHA.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,526 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 BlkCn BT' (Swis721 BlkCn BT Black.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,527 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,528 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Lt BT' (tt0002m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,531 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Cn BT' (tt0171m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,532 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Californian FB' (CALIFR.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,533 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Cn BT' (tt0172m_.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,533 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,534 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,535 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'News701 BT' (News701 BT Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,535 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,536 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 600 normal>) = 11.24
2021-04-28 15:27:15,536 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,537 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rockwell' (ROCKI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,538 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Cn BT' (tt0009m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,538 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal 600 normal>) = 10.24
2021-04-28 15:27:15,539 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2021-04-28 15:27:15,539 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,541 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,542 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 600 normal>) = 10.24
2021-04-28 15:27:15,543 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'CentSchbkCyrill BT' (CentSchbkCyrill BT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,543 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Vladimir Script' (VLADIMIR.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,544 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,544 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (meiryo.ttc) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,545 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,545 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DFMincho-SU' (DFMinE1.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,545 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GeoSlab703 MdCn BT' (tt1020m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,546 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,546 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2021-04-28 15:27:15,547 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Cn BT' (Swis721 Cn BT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,547 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,548 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bell MT' (BELL.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,549 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,549 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 No2 BT' (Century751 No2 BT Roman.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,550 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calisto MT' (CALISTBI.TTF) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,550 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GeoSlab703 Md BT' (GeoSlab703 Md BT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,551 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DFGothic-EB' (DFHeiA1.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,551 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2021-04-28 15:27:15,552 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,552 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (LatoWeb-Light.ttf) normal normal 300 normal>) = 10.145
2021-04-28 15:27:15,553 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 WGL4 BT' (tt0004c_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,553 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'News701 BT' (News701 BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,554 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,554 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2021-04-28 15:27:15,555 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,555 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni MT' (BOD_BLAR.TTF) normal normal 900 normal>) = 10.525
2021-04-28 15:27:15,557 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura Md BT' (tt0145m_.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,558 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2021-04-28 15:27:15,560 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2021-04-28 15:27:15,560 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GeoSlab703 MdCn BT' (GeoSlab703 MdCn BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,561 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (LatoWeb-Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,561 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Bd BT' (tt0037m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,562 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Jokerman' (JOKERMAN.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,562 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,563 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 BlkCn BT' (tt0173m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,563 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,563 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Unispace' (unispace bd.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,564 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Fax' (LFAX.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,564 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'CentSchbkCyrill BT' (CentSchbkCyrill BT Roman.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,564 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 No2 BT' (tt1185m_.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,565 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century Schoolbook' (SCHLBKI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,565 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2021-04-28 15:27:15,565 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (GILI____.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,565 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,566 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,567 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (LatoWeb-LightItalic.ttf) italic normal 300 normal>) = 11.145
2021-04-28 15:27:15,567 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'BIZ UDMincho' (BIZ-UDMinchoM.ttc) normal normal 500 normal>) = 10.145
2021-04-28 15:27:15,567 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 BT' (tt0869m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,567 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (LatoWeb-SemiboldItalic.ttf) italic normal 600 normal>) = 11.24
2021-04-28 15:27:15,567 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT Condensed' (GILC____.TTF) normal normal 400 condensed>) = 10.25
2021-04-28 15:27:15,567 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Agency FB' (AGENCYB.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,568 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (PERBI___.TTF) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,568 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Eras Demi ITC' (ERASDEMI.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,568 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,568 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2021-04-28 15:27:15,569 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,569 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Fax' (LFAXI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,569 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,570 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,570 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GeoSlab703 MdCn BT' (tt1019m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,570 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Lt BT' (Swis721 Lt BT Light.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,571 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,571 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans Ultra Bold' (GILSANUB.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,571 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Agency FB' (AGENCYR.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,572 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gloucester MT Extra Condensed' (GLECB.TTF) normal normal 400 condensed>) = 10.25
2021-04-28 15:27:15,572 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Lt BT' (Swis721 Lt BT Light Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,573 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 No2 BT' (tt1184m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,573 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Niagara Solid' (NIAGSOL.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,574 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Magneto' (MAGNETOB.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,574 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GeoSlab703 Md BT' (tt0310m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,575 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 No2 BT' (tt1180m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,575 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (TCMI____.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,575 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,575 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,576 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Clarendon BT' (tt0284m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,576 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 No2 BT' (Century751 No2 BT Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,576 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kunstler Script' (KUNSTLER.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,577 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'CentSchbkCyrill BT' (tt6805m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,577 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (meiryob.ttc) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,577 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Berlin Sans FB Demi' (BRLNSDB.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,578 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humnst777 Blk BT' (Humnst777 Blk BT Black Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,578 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Playbill' (PLAYBILL.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,578 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Square721 Cn BT' (Square721 Cn BT Roman.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,579 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,580 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,581 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Harrington' (HARNGTON.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,581 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Cn BT' (Swis721 Cn BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,582 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Square721 BT' (tt0246m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,582 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Hv BT' (Swis721 Hv BT Heavy.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,582 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,583 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 BT' (Swis721 BT Roman.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,583 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kremlin' (kremlin.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,584 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,584 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,585 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 BT' (Swis721 BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,585 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Viner Hand ITC' (VINERITC.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,586 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century725 Cn BT' (Century725 Cn BT.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,586 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,586 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni MT' (BOD_BLAI.TTF) italic normal 900 normal>) = 11.525
2021-04-28 15:27:15,587 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'High Tower Text' (HTOWERTI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,587 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 No2 BT' (Century751 No2 BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,588 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,588 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 BT' (Century751 BT Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,588 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,590 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 BT' (Century751 BT Roman.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,590 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 WGL4 BT' (Swis721 WGL4 BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,591 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,591 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,591 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OCR A Extended' (OCRAEXT.TTF) normal normal 400 expanded>) = 10.25
2021-04-28 15:27:15,592 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura Md BT' (tt0144m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,592 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humnst777 Lt BT' (Humnst777 Lt BT Light.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,592 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OCR-B 10 BT' (OCR-b___.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,593 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Centaur' (CENTAUR.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,593 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,593 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,594 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,594 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura Md BT' (Futura Md BT Medium Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,595 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (TCM_____.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,596 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,597 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'NewsGoth BT' (NewsGoth BT Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,598 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Schadow BT' (tt1107m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,598 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Demi' (FRADMIT.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,599 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'NewsGoth BT' (tt0049m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,599 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'News701 BT' (tt0319m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,600 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,601 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rockwell' (ROCKB.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,601 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium Cond' (FRAMDCN.TTF) normal normal 400 condensed>) = 10.25
2021-04-28 15:27:15,602 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,602 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Edwardian Script ITC' (ITCEDSCR.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,603 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal 800 normal>) = 11.43
2021-04-28 15:27:15,603 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gigi' (GIGI.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,604 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2021-04-28 15:27:15,604 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,604 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HYWenHei' (zh-cn.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,605 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (TCBI____.TTF) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,605 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,605 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humnst777 Cn BT' (tt1160m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,606 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,606 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rage Italic' (RAGE.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,606 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Mincho' (msmincho.ttc) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,607 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal 300 normal>) = 10.145
2021-04-28 15:27:15,607 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,608 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,608 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,608 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,608 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura Bk BT' (tt0141m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,609 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Felix Titling' (FELIXTI.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,609 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2021-04-28 15:27:15,609 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,610 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'News706 BT' (News706 BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,610 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura Bk BT' (Futura Bk BT Book.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,611 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Book' (FRABK.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,611 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Eras Light ITC' (ERASLGHT.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,611 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'News706 BT' (tt0365m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,612 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DFPOP1-W9' (DFPop91.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,612 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GeoSlab703 Md BT' (tt0309m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,612 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 WGL4 BT' (tt0003c_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,612 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Bk BT' (Bodoni Bk BT Book.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,613 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,613 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,613 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni MT' (BOD_R.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,614 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,614 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humanst521 Lt BT' (Humanst521 Lt BT Light.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,614 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Typewriter' (LTYPE.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,614 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,615 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humanst521 BT' (Humanst521 BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,615 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century Schoolbook' (CENSCBK.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,615 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2021-04-28 15:27:15,616 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,616 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Square721 BT' (tt0247m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,616 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DFKaiSho-SB' (DFKai71.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,616 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,617 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura Bk BT' (Futura Bk BT Book Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,617 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Mincho' (yumindb.ttf) normal normal 600 normal>) = 10.24
2021-04-28 15:27:15,617 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Freehand521 BT' (tt1018m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,618 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,618 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2021-04-28 15:27:15,618 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,618 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humnst777 BlkCn BT' (Humnst777 BlkCn BT Black.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,619 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bernard MT Condensed' (BERNHC.TTF) normal normal 400 condensed>) = 10.25
2021-04-28 15:27:15,619 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century751 BT' (tt0868m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,620 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,620 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century Schoolbook' (SCHLBKB.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,621 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2021-04-28 15:27:15,621 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (GILBI___.TTF) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,622 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal 500 normal>) = 10.145
2021-04-28 15:27:15,622 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,622 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GeoSlab703 Md BT' (GeoSlab703 Md BT Medium.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,623 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,623 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Berlin Sans FB' (BRLNSB.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,623 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Square721 BT' (Square721 BT Roman.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,623 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,624 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal 300 normal>) = 10.145
2021-04-28 15:27:15,624 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (PER_____.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,624 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2021-04-28 15:27:15,625 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,625 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,625 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Bright' (LBRITEDI.TTF) italic normal 600 normal>) = 11.24
2021-04-28 15:27:15,625 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal 300 normal>) = 10.145
2021-04-28 15:27:15,626 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Forte' (FORTE.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,626 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Heavy' (FRAHV.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,626 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Cn BT' (Swis721 Cn BT Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,627 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,627 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,628 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humnst777 BlkCn BT' (tt1161m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,628 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2021-04-28 15:27:15,628 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Bright' (LBRITE.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,628 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calisto MT' (CALIST.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,629 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans' (LSANS.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,629 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humanst521 BT' (tt0293m_.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,629 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni MT' (BOD_CB.TTF) normal normal 700 condensed>) = 10.535
2021-04-28 15:27:15,630 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Poor Richard' (POORICH.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,630 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humnst777 BT' (tt0857m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,630 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 BT' (tt0004m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,631 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,631 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Book' (FRABKIT.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,631 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 Cn BT' (tt0010m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,631 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,632 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 LtEx BT' (Swis721 LtEx BT Light.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,632 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,632 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2021-04-28 15:27:15,632 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,633 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Exotc350 DmBd BT' (tt0627m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,633 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 WGL4 BT' (Swis721 WGL4 BT Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,633 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal 600 normal>) = 11.24
2021-04-28 15:27:15,634 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,634 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Bk BT' (tt0035m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,634 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,634 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DFMincho-UB' (DFMinC1.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,635 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GeoSlab703 Md BT' (tt0308m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,635 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Modern No. 20' (MOD20.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,635 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baskerville Old Face' (BASKVILL.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,635 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,636 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Informal Roman' (INFROMAN.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,636 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,636 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,637 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 LtEx BT' (tt0371m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,637 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2021-04-28 15:27:15,637 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Berlin Sans FB' (BRLNSR.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,638 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,638 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rockwell' (ROCK.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,638 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,639 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Californian FB' (CALIFB.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,639 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'BIZ UDGothic' (BIZ-UDGothicR.ttc) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,640 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Clarendon BT' (Clarendon BT Bold.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,640 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2021-04-28 15:27:15,641 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bauhaus 93' (BAUHS93.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,641 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humanst521 BT' (Humanst521 BT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,641 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Bk BT' (Bodoni Bk BT Book Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,642 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,642 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2021-04-28 15:27:15,642 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Clarendon BT' (Clarendon BT Roman.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,643 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'CentSchbkCyrill BT' (tt6804m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,643 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,643 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,643 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal 800 normal>) = 10.43
2021-04-28 15:27:15,644 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni MT' (BOD_PSTC.TTF) normal normal 300 normal>) = 10.145
2021-04-28 15:27:15,644 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,645 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,645 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Colonna MT' (COLONNA.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,645 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,646 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,647 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DeVinne Txt BT' (DeVinne Txt BT.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,647 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Embassy BT' (Embassy BT.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,648 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humanst521 BT' (Humanst521 BT Roman.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,648 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geometr706 BlkCn BT' (Geometr706 BlkCn BT Black.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,648 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Stencil' (STENCIL.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,649 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DeVinne Txt BT' (tt1041m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,649 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni MT' (BOD_CI.TTF) italic normal 400 condensed>) = 11.25
2021-04-28 15:27:15,650 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,650 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'NewsGoth BT' (tt0048m_.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,650 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'UD Digi Kyokasho N-R' (UDDigiKyokashoN-R.ttc) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,651 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Blackadder ITC' (ITCBLKAD.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,651 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (PERB____.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,652 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Castellar' (CASTELAR.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,652 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (BRUSHSCI.TTF) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,652 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,653 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Swis721 BT' (tt0005m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,653 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,653 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Bright' (LBRITED.TTF) normal normal 600 normal>) = 10.24
2021-04-28 15:27:15,653 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,654 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,654 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,654 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geometr212 BkCn BT' (Geometr212 BkCn BT Book.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,655 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Copperplate Gothic Light' (COPRGTL.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,655 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2021-04-28 15:27:15,655 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OCR-B 10 BT' (OCR-B 10 BT.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,655 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Humanst521 BT' (tt0292m_.ttf) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,656 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans Ultra Bold Condensed' (GILLUBCD.TTF) normal normal 400 condensed>) = 10.25
2021-04-28 15:27:15,656 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Eras Medium ITC' (ERASMD.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,657 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni MT' (BOD_CBI.TTF) italic normal 700 condensed>) = 11.535
2021-04-28 15:27:15,657 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (LatoWeb-Italic.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,658 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,658 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'NewsGoth Cn BT' (tt0375m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,659 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Clarendon BT' (tt0283m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,660 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,660 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335
2021-04-28 15:27:15,661 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,661 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Exotc350 Bd BT' (tt0628m_.ttf) normal normal 400 normal>) = 10.05
2021-04-28 15:27:15,662 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,663 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2021-04-28 15:27:15,663 [15344] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2021-04-28 15:27:15,664 [15344] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\sharo\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2021-04-28 15:43:17,580 [17540] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-28 15:43:17,580 [17540] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-28 15:43:17,581 [17540] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-28 15:43:17,588 [17540] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-28 15:43:17,591 [17540] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-28 15:43:17,591 [17540] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-28 15:43:51,205 [18068] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-28 15:43:51,206 [18068] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-28 15:43:51,206 [18068] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-28 15:43:51,214 [18068] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-28 15:43:51,216 [18068] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-28 15:43:51,217 [18068] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-28 16:05:32,389 [16504] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-28 16:05:32,390 [16504] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-28 16:05:32,390 [16504] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-28 16:05:32,397 [16504] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-28 16:05:32,398 [16504] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-28 16:05:32,399 [16504] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-28 16:05:33,210 [16504] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-28 16:05:33,211 [16504] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-28 16:05:33,211 [16504] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-28 16:05:33,220 [16504] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-28 16:05:33,221 [16504] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-28 16:05:33,222 [16504] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-04-28 16:05:36,587 [10332] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-04-28 16:05:36,587 [10332] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-04-28 16:05:36,588 [10332] INFO     root:247: [JupyterRequire] Initializing comms.
2021-04-28 16:05:36,595 [10332] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-04-28 16:05:36,598 [10332] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-04-28 16:05:36,599 [10332] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-05-07 18:28:41,518 [15624] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-05-07 18:28:41,519 [15624] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-05-07 18:28:41,519 [15624] INFO     root:247: [JupyterRequire] Initializing comms.
2021-05-07 18:28:41,526 [15624] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-05-07 18:28:41,528 [15624] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-05-07 18:28:41,529 [15624] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2021-05-07 18:28:42,340 [15624] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2021-05-07 18:28:42,340 [15624] DEBUG    root:93: [JupyterRequire] Initializing comms.
2021-05-07 18:28:42,341 [15624] INFO     root:247: [JupyterRequire] Initializing comms.
2021-05-07 18:28:42,350 [15624] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2021-05-07 18:28:42,352 [15624] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2021-05-07 18:28:42,353 [15624] DEBUG    root:97: [JupyterRequire] Registering comm targets.
